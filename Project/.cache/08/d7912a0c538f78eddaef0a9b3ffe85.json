{"id":"clm_video.html","dependencies":[{"name":"./styles\\bootstrap.min.css","dynamic":true,"resolved":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\styles\\bootstrap.min.css","parent":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\clm_video.html"},{"name":"./js\\libs\\utils.js","dynamic":true,"resolved":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\js\\libs\\utils.js","parent":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\clm_video.html"},{"name":"./build\\clmtrackr.js","dynamic":true,"resolved":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\build\\clmtrackr.js","parent":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\clm_video.html"},{"name":"./js\\libs\\Stats.js","dynamic":true,"resolved":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\js\\libs\\Stats.js","parent":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\clm_video.html"},{"name":"_css_loader","parent":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\clm_video.html","resolved":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"C:\\Users\\adamu\\Documents\\Documents\\stage\\project\\React\\Project\\package.json","includedInParent":true,"mtime":1591867816965}],"generated":{"html":"<!doctype html>\n<html lang=\"en\">\n\t<head>\n\t\t<title>Face tracker</title>\n\t\t<!-- On définit ici ce qui sera la racine de notre application -->\n\t\t<!-- Sans oublier d'inclure la source de notre projet -->\n\t\t<meta charset=\"utf-8\">\n\t\t<link href=\"/631d205d53935b3041d662d1331330c9.css\" rel=\"stylesheet\" type=\"text/css\">\n\t\t<style>@import url(https://fonts.googleapis.com/css?family=Lato:300italic,700italic,300,700);\n\n\t\t\tbody {\n\t\t\t\tfont-family: 'Lato';\n\t\t\t\tbackground-color: #f0f0f0;\n\t\t\t\tmargin: 0px auto;\n\t\t\t\tmax-width: 1150px;\n\t\t\t}\n\n\t\t\t#overlay {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0px;\n\t\t\t\tleft: 0px;\n\t\t\t\t-o-transform : scaleX(-1);\n\t\t\t\t-webkit-transform : scaleX(-1);\n\t\t\t\ttransform : scaleX(-1);\n\t\t\t}\n\n\t\t\t#videoel {\n\t\t\t\t-o-transform : scaleX(-1);\n\t\t\t\t-webkit-transform : scaleX(-1);\n\t\t\t\ttransform : scaleX(-1);\n\n\t\t\t}\n\n\t\t\t#container {\n\t\t\t\tposition : relative;\n\t\t\t\twidth : 370px;\n\t\t\t\t/*margin : 0px auto;*/\n\t\t\t}\n\n\t\t\t#content {\n\t\t\t\tmargin-top : 70px;\n\t\t\t\tmargin-left : 100px;\n\t\t\t\tmargin-right : 100px;\n\t\t\t\tmax-width: 950px;\n\t\t\t}\n\n\t\t\th2 {\n\t\t\t\tfont-weight : 400;\n\t\t\t}\n\n\t\t\t.nogum {\n\t\t\t\tdisplay : none;\n\t\t\t}\n\n\t\t\t.btn {\n\t\t\t\tfont-family: 'Lato';\n\t\t\t\tfont-size: 16px;\n\t\t\t}\n\n\t\t\t.hide {\n\t\t\t\tdisplay : none;\n\t\t\t}\n\n\t\t\t.nohide {\n\t\t\t\tdisplay : block;\n\t\t\t}</style>\n\t\t<!-- On définit ici ce qui sera la racine de notre application -->\n\t\t<script>// getUserMedia only works over https in Chrome 47+, so we redirect to https. Also notify user if running from file.\nif (window.location.protocol == \"file:\") {\n  alert(\"You seem to be running this example directly from a file. Note that these examples only work when served from a server or localhost due to canvas cross-domain restrictions.\");\n} else if (window.location.hostname !== \"localhost\" && window.location.protocol !== \"https:\") {\n  window.location.protocol = \"https\";\n}</script>\n\t\t<script>var _gaq = _gaq || [];\n\n_gaq.push(['_setAccount', 'UA-32642923-1']);\n\n_gaq.push(['_trackPageview']);\n\n(function () {\n  var ga = document.createElement('script');\n  ga.type = 'text/javascript';\n  ga.async = true;\n  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n  var s = document.getElementsByTagName('script')[0];\n  s.parentNode.insertBefore(ga, s);\n})();</script>\n\t</head>\n\t<body>\n\t\t<script src=\"/5af779c9ff42073592283788873a1063.js\"></script>\n\t\t<script src=\"/25d98f657ebb5e521f1c73016fd39ef5.js\"></script>\n\t\t<script src=\"/3f06f6877f9ca73afa80b1abab7f0504.js\"></script>\n\t\t<div id=\"content\">\n\t\t\t<p id=\"positionText\"></p>\n\t\t\t<p id=\"rotationText\"></p>\n\t\t\t<p id=\"qualityText\"></p>\n\t\t\t<h2>Facetracking example</h2>\n\t\t\t<div id=\"container\">\n\n\t\t\t\t<video id=\"videoel\" width=\"400\" height=\"300\" preload=\"auto\" loop=\"\" playsinline=\"\" autoplay=\"\">\n\t\t\t\t</video>\n\t\t\t\t<canvas id=\"overlay\" width=\"400\" height=\"300\"></canvas>\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<input class=\"btn\" type=\"button\" value=\"wait, loading video\" disabled=\"disabled\" onclick=\"startVideo()\" id=\"startbutton\">\n\n\t\t\t<script>var vid = document.getElementById('videoel');\nvar vid_width = vid.width;\nvar vid_height = vid.height;\nvar overlay = document.getElementById('overlay');\nvar overlayCC = overlay.getContext('2d');\n/*********** Setup of video/webcam and checking for webGL support *********/\n\nfunction enablestart() {\n  var startbutton = document.getElementById('startbutton');\n  startbutton.value = \"start\";\n  startbutton.disabled = null;\n}\n\nvar insertAltVideo = function insertAltVideo(video) {\n  // insert alternate video if getUserMedia not available\n  if (supports_video()) {\n    if (supports_webm_video()) {\n      video.src = \"./media/cap12_edit.webm\";\n    } else if (supports_h264_baseline_video()) {\n      video.src = \"./media/cap12_edit.mp4\";\n    } else {\n      return false;\n    }\n\n    return true;\n  } else return false;\n};\n\nfunction adjustVideoProportions() {\n  // resize overlay and video if proportions of video are not 4:3\n  // keep same height, just change width\n  var proportion = vid.videoWidth / vid.videoHeight;\n  vid_width = Math.round(vid_height * proportion);\n  vid.width = vid_width;\n  overlay.width = vid_width;\n}\n\nfunction gumSuccess(stream) {\n  // add camera stream if getUserMedia succeeded\n  if (\"srcObject\" in vid) {\n    vid.srcObject = stream;\n    console.log(vid.getAttribute('position'));\n  } else {\n    vid.src = window.URL && window.URL.createObjectURL(stream);\n  }\n\n  vid.onloadedmetadata = function () {\n    adjustVideoProportions();\n    vid.play();\n    console.log(vid.getAttribute('position'));\n  };\n\n  vid.onresize = function () {\n    adjustVideoProportions();\n\n    if (trackingStarted) {\n      ctrack.stop();\n      ctrack.reset();\n      ctrack.start(vid);\n    }\n  };\n}\n\nfunction gumFail() {\n  // fall back to video if getUserMedia failed\n  insertAltVideo(vid);\n  document.getElementById('gum').className = \"hide\";\n  document.getElementById('nogum').className = \"nohide\";\n  alert(\"There was some problem trying to fetch video from your webcam, using a fallback video instead.\");\n}\n\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\nwindow.URL = window.URL || window.webkitURL || window.msURL || window.mozURL; // set up video\n\nif (navigator.mediaDevices) {\n  navigator.mediaDevices.getUserMedia({\n    video: true\n  }).then(gumSuccess).catch(gumFail);\n} else if (navigator.getUserMedia) {\n  navigator.getUserMedia({\n    video: true\n  }, gumSuccess, gumFail);\n} else {\n  insertAltVideo(vid);\n  document.getElementById('gum').className = \"hide\";\n  document.getElementById('nogum').className = \"nohide\";\n  alert(\"Your browser does not seem to support getUserMedia, using a fallback video instead.\");\n}\n\nvid.addEventListener('canplay', enablestart, false);\n/*********** Code for face tracking *********/\n\nvar ctrack = new clm.tracker();\nctrack.init();\nvar trackingStarted = true;\n\nfunction startVideo() {\n  // start video\n  vid.play(); // start tracking\n\n  ctrack.start(vid); //trackingStarted = true;\n\n  drawLoop(); // start loop to draw face\n}\n\nfunction drawLoop() {\n  requestAnimFrame(drawLoop);\n  overlayCC.clearRect(0, 0, vid_width, vid_height); //psrElement.innerHTML = \"score :\" + ctrack.getScore().toFixed(4);\n\n  if (ctrack.getCurrentPosition()) {\n    ctrack.draw(overlay);\n  }\n}\n\nsetInterval(function () {\n  console.log(ctrack.getScore());\n  document.getElementById(\"positionText\").innerHTML = \"distance: \" + ctrack.getHeadSize();\n  document.getElementById(\"rotationText\").innerHTML = \"roll: \" + ctrack.getHeadRoll();\n  document.getElementById(\"qualityText\").innerHTML = \"quality: \" + ctrack.getScore();\n}, 1000);\n/*********** Code for stats **********/\n\n/*stats = new Stats();\nstats.domElement.style.position = 'absolute';\nstats.domElement.style.top = '0px';\ndocument.getElementById('container').appendChild( stats.domElement );\n\t// update stats on every iteration\ndocument.addEventListener('clmtrackrIteration', function(event) {\n\tstats.update();\n}, false);\n\t/************* code for manipulations ****************/</script>\n\t\t</div>\n\t</body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"44a9a548d5395f666843305fd700640a","cacheData":{"env":{}}}